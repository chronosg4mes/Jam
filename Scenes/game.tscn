[gd_scene load_steps=2 format=3 uid="uid://dh5gy7k0owu0p"]

[sub_resource type="GDScript" id="GDScript_2o7ha"]
script/source = "extends Node2D

var room_var_1 = preload(\"res://Rooms/room_variation_1.tscn\")
var corridor_h = preload(\"res://Rooms/corridor_h.tscn\")
var corridor_v = preload(\"res://Rooms/corridor_v.tscn\")

var dungeon = {}
var node_sprite = load(\"res://test/map_nodes1.png\")
var branch_sprite = load(\"res://test/map_nodes3.png\")
var dungeon_generation = DungeonGeneration

func _ready():
	dungeon = dungeon_generation.generate(0)
	load_map()

func load_map():
	var map_node = $MapNode
	for childs in range(0, map_node.get_child_count()):
		map_node.get_child(childs).queue_free()
		
	for i in dungeon.keys():
		var temp = room_var_1.instantiate()
		
		map_node.add_child(temp)
		temp.z_index = 0
		temp.position = i * 960
		var c_rooms = dungeon.get(i).connected_rooms
		if(c_rooms.get(Vector2(1, 0)) != null):
			temp = corridor_h.instantiate()
			map_node.add_child(temp)
			temp.z_index = 1
			temp.position = (i + Vector2(1, 0) / 2) * 960

		if(c_rooms.get(Vector2(0, 1)) != null):
			temp = corridor_v.instantiate()
			map_node.add_child(temp)
			temp.z_index = 1
			temp.rotation_degrees = 90
			temp.position = (i + Vector2(0, 1) / 2) * 965
			
func _on_button_pressed():
	randomize()
	dungeon = dungeon_generation.generate(randi_range(-1000, 1000))
	load_map()
"

[node name="Game" type="Node2D"]
script = SubResource("GDScript_2o7ha")

[node name="Button" type="Button" parent="."]
offset_left = 26.0
offset_top = 8.0
offset_right = 379.0
offset_bottom = 92.0
text = "Generate"

[node name="MapNode" type="Node2D" parent="."]
texture_filter = 1
position = Vector2(600, 298)
scale = Vector2(0.5, 0.5)

[connection signal="pressed" from="Button" to="." method="_on_button_pressed"]
